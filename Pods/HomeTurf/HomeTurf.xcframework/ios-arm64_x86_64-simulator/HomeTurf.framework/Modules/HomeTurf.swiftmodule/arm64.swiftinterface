// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios14.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name HomeTurf
import AVFoundation
import AudioUnit
import Foundation
@_exported import HomeTurf
import Swift
import SwiftUI
import UIKit
import UserNotifications
import WebKit
@_inheritsConvenienceInitializers @objc final public class HomeTurfJavascriptService : ObjectiveC.NSObject {
  final public func setWKWebView(wkWebView: WebKit.WKWebView)
  final public func runJavascriptInWebView(action: Swift.String)
  final public func runJavascriptInWebView(action: Swift.String, data: Swift.String, sendDataAsString: Swift.Bool)
  @objc deinit
  @objc override dynamic public init()
}
final public class HomeTurfWebView : SwiftUI.UIViewControllerRepresentable {
  @SwiftUI.Environment final public var presentationMode: SwiftUI.Binding<SwiftUI.PresentationMode> {
    get
  }
  public init()
  public init(auth0Service: HomeTurf.HomeTurfBaseAuth0Service)
  final public func dismiss()
  final public func makeUIViewController(context: HomeTurf.HomeTurfWebView.Context) -> HomeTurf.HomeTurfWebViewController
  final public func updateUIViewController(_ uiViewController: HomeTurf.HomeTurfWebViewController, context: HomeTurf.HomeTurfWebView.Context)
  @objc deinit
  public typealias UIViewControllerType = HomeTurf.HomeTurfWebViewController
  public typealias Coordinator = Swift.Void
  public typealias Body = Swift.Never
}
@objc public protocol HomeTurfBaseAuth0Service {
  @objc init()
  @objc func setCredentials(audience: Swift.String, clientId: Swift.String, domain: Swift.String)
  @objc func setJavascriptService(javascriptService: HomeTurf.HomeTurfJavascriptService)
  @objc func login()
  @objc func logout()
}
@objc @_inheritsConvenienceInitializers public class HomeTurfWebViewController : UIKit.UIViewController, UIKit.UIImagePickerControllerDelegate, UIKit.UINavigationControllerDelegate, WebKit.WKScriptMessageHandler, WebKit.WKUIDelegate {
  public var auth0Service: HomeTurf.HomeTurfBaseAuth0Service?
  public var popView: (() -> ())?
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc public func setAuth0Service(auth0Service: HomeTurf.HomeTurfBaseAuth0Service)
  @objc override dynamic open var shouldAutorotate: Swift.Bool {
    @objc get
  }
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidLayoutSubviews()
  @objc public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  @objc deinit
}
